
resource "aws_security_group" "my_sg" {
  name = "my_sg"
  # vpc_id = vpc_id.id
  vpc_id = var.vpc_id
  ingress{
    cidr_blocks   = [var.my-ip]
    from_port   = 22
    protocol = "tcp"
    to_port     = 22
  }
  ingress{
    cidr_blocks   = ["0.0.0.0/0"]
    from_port   = 8080
    protocol = "tcp"
    to_port     = 8080
  }

  egress{
    cidr_blocks   = ["0.0.0.0/0"]
    from_port   = 0
    protocol = "-1"
    to_port     = 0
    prefix_list_ids = []
  }

  tags = {
    Name = "${var.env_prefix}-sg"
  }
}


resource "aws_key_pair" "deployer" {
  key_name   = "deployer-key"
  public_key = "${file(var.my-pub-key)}"
}


data "aws_ami" "latest-linux-image"{
  
  most_recent = true
  owners = [ "amazon" ]
  filter {
    name = "name"
    values = [ "al2023-ami-*-x86_64" ]
  }
  # filter {
  #   name = "virtualization_type"
  #   values = [ "hvm" ]
  # }

}


resource "aws_instance" "mydina_ec2" {
  ami = data.aws_ami.latest-linux-image.id
  instance_type = var.myinstance_type

  subnet_id = var.subnet_id

  vpc_security_group_ids = [ aws_security_group.my_sg.id ]
  availability_zone = var.avail_zone
  associate_public_ip_address = true 

#i create on aws and save it in .ssh and chmod 400
#  "#its name on aws after the above steps"/or autogenerated 
  key_name = aws_key_pair.deployer.key_name
  
  
  tags = {
    Name =  "${var.env_prefix}-ec2"
  }

  user_data = file("entry-script.sh")
}

